[project]
name = "eventbus"
version = "0.1.0"
description = "a simple event queuing bus using grpc"
authors = [
    {name = "codecakes",email = "akulmat@protonmail.com"}
]
license = {text = "GPL-3.0"}
readme = "README.md"
requires-python = ">=3.12.9, <3.13"
dynamic = [ "dependencies" ]

[tool.poetry]
packages = [{include = "eventbus", from = "src"}]

[tool.poetry.dependencies]
Hypercorn = "^0.17.3"
MarkupSafe = "^3.0.2"
uvloop = {version = "^0.21.0", markers = "sys_platform != 'win32'"}
cython = "^3.0.11"
protobuf = "*"
grpcio = "*"
grpcio-tools = "*"

[tool.poetry.group.dev.dependencies]
protovalidate = "*"
pyright = "^1.1.395"
ruff = { version = "^0.9.1", optional = true }
mypy = { version = "^1.11.2", optional = true }
pre-commit = { version="^4.0.1", optional = true }
black = { version = "^24.8.0", optional = true }
anyio = { version = "^4.4.0", optional = true }
pytest = { version = "^8.2.2", markers = "platform_python_implementation == 'CPython'", optional = true }
pytest-asyncio = { version = "^0.25.2", optional = true }

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "api: mark api tests",
    "unit: marks tests as unit tests",
]
# Add env vars when running pytest
env = [
    "APP_ENV=test",
]

[tool.pyright]
useLibraryCodeForTypes = true
verboseOutput = true
include = [
    "src/**/*.py",
    "tests/**/test_*.py",
]
exclude = [
    "**/node_modules",
    "**/__pycache__"
    ]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
